import java.util.regex.Matcher

buildscript {
	ext {
		springBootVersion = "1.5.9.RELEASE"
		mySqlConnectorVersion = "5.1.45"
		lombokVersion = "1.16.8"
		jacksonDatatypeVersion = "2.4.0"

		//Framework de testes
		junitVersion = '4.12'
		mockitoVersion = '2.8.9'
		cucumberVersion = '1.2.4'
		gherkinVersion = '2.12.2'

		//Gradle Release Plugin
		gradleReleasePlugin = '2.6.0'
	}
	repositories {
		mavenCentral()
		maven {
			url = 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("net.researchgate:gradle-release:${gradleReleasePlugin}")
	}
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "net.researchgate.release"

group = 'br.com.douglasfernandes'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
	mavenCentral()
	maven {
		url = 'https://plugins.gradle.org/m2/'
	}
}

release {
	failOnCommitNeeded = true
	failOnPublishNeeded = true
	failOnSnapshotDependencies = true
	failOnUnversionedFiles = false
	failOnUpdateNeeded = true
	revertOnFail = true
	preCommitText = ''
	preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
	tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
	newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
	tagTemplate = '${version}'
	versionPropertyFile = 'gradle.properties'
	versionProperties = []
	buildTasks = ['jar']
	versionPatterns = [
			/(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
	]
	scmAdapters = [
			net.researchgate.release.GitAdapter
	]

	git {
		requireBranch = ''
		pushToRemote = 'origin'
		pushToBranchPrefix = ''
		commitVersionFileOnly = false
		signTag = false
	}
}

bootRun() {
	dependsOn 'test'
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-jersey")
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-actuator")

	compile("mysql:mysql-connector-java:${mySqlConnectorVersion}")
	compile("org.projectlombok:lombok:${lombokVersion}")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDatatypeVersion}")

	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.security:spring-security-test")
	testCompile("info.cukes:cucumber-jvm:${cucumberVersion}")
	testCompile("info.cukes:cucumber-core:${cucumberVersion}")
	testCompile("info.cukes:cucumber-java:${cucumberVersion}")
	testCompile("info.cukes:cucumber-junit:${cucumberVersion}")
	testCompile("info.cukes:cucumber-spring:${cucumberVersion}")
	testCompile("info.cukes:gherkin:${gherkinVersion}")
}
